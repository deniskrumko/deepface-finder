name: Build image and push
run-name: Build ${{ github.ref_name }}

on:
  push:
    # Pattern matched against refs/tags
    tags:
      - '*'

jobs:
  build-cpu:
    name: Build for CPU
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: |
            linux/amd64
            linux/arm64
          tags: |
            deniskrumko/deepface-finder:latest
            deniskrumko/deepface-finder:${{ github.ref_name }}

  build-cuda:
    name: Build for CUDA
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile.cuda
          push: true
          platforms: |
            linux/amd64
            linux/arm64
          tags: |
            deniskrumko/deepface-finder-cuda:latest
            deniskrumko/deepface-finder-cuda:${{ github.ref_name }}

  release:
    name: Release
    needs: [build-cpu, build-cuda]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Release
        id: create-release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          token: ${{ secrets.GH_TOKEN }}
          generate_release_notes: true
